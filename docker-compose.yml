services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: cleanup-tracker-mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: cleanup-tracker
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cleanup-tracker-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Cleanup Tracker Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cleanup-tracker-app
    restart: always
    ports:
      - "5051:5051"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - PORT=5051
      - MONGO_URI=mongodb://mongodb:27017/cleanup-tracker
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - cleanup-tracker-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5051/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

networks:
  cleanup-tracker-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
